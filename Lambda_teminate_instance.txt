import boto3
import logging
import time

def lambda_handler(event, context):
    start_time = time.time()
    ec2 = boto3.client('ec2')
    logger = logging.getLogger()
    logger.setLevel(logging.INFO)
    
    try:
        # Describe instances with 'stopped' state
        stopped_instances = ec2.describe_instances(
            Filters=[
                {'Name': 'instance-state-name', 'Values': ['stopped']}
            ]
        )
        
        instance_ids = []
        for reservation in stopped_instances['Reservations']:
            for instance in reservation['Instances']:
                instance_ids.append(instance['InstanceId'])
        
        if instance_ids:
            response = ec2.terminate_instances(InstanceIds=instance_ids)
            logger.info(f"Terminated instances: {instance_ids}")
        else:
            logger.info("No stopped instances to terminate.")
    
    except Exception as e:
        logger.error(f"Error terminating instances: {str(e)}")
        return {
            'statusCode': 500,
            'body': f"Error: {str(e)}"
        }
    
    execution_time = time.time() - start_time
    logger.info(f"Execution time: {execution_time} seconds")
    
    return {
        'statusCode': 200,
        'body': f"Terminated instances: {instance_ids}" if instance_ids else "No stopped instances to terminate."
    }
